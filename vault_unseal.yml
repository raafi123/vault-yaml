---
- hosts: localhost
  connection: local
  environment:
    VAULT_ADDR: http://127.0.0.1:8200
    VAULT_TOKEN: root
    VAULT_SKIP_VERIFY: true
  vars:
  - vault_download: https://releases.hashicorp.com/vault/1.2.3/vault_1.2.3_linux_amd64.zip
  - vault_file: "{{ vault_download | basename }}"
  
  tasks:
  - name: Creating vault user group
  group: 
    name: "{{ vault_group }}"
  become: true
- name: Creating vault user
  user:
    name: "{{ vault_user }}"
    group: "{{ vault_group }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "vault nologin User"
    createhome: "no"
    state: present
  - name: Install prerequisites
  package:
    name: "{{ item }}"
    update_cache: yes
  with_items: "{{ vault_install_prerequisites }}"
  become: yes
- name: Download binary
  get_url:
    url: https://releases.hashicorp.com/vault/{{vault_version}}/vault_{{vault_version}}_linux_amd64.zip
    dest: /tmp/vault_{{vault_version}}_linux_amd64.zip
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
    checksum: "{{vault_checksum}}"
  register: vault_download
- name: "Unzip vault archive"
  unarchive:
    src: "{{ vault_download.dest }}"
    dest: /usr/local/bin
    copy: no
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
- name: "Set vault binary capabilities"
  capabilities:
    path: /usr/local/bin/vault
    capability: cap_ipc_lock+ep
    state: present
    
- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/vault.service
    owner: root
    group: root
  notify: systemd_reload
- name: config file
  template:
    src: vault.hcl.j2
    dest: "{{ vault_config_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
- name: vault service
  service:
    name: vault
    state: started
    enabled: yes

- name: Create unseal directories
  file:
    path: "{{ unseal_keys_dir_output }}"
    state: directory
  delegate_to: localhost
- name: Create root key directories
  file:
    path: "{{ root_token_dir_output }}"
    state: directory
  delegate_to: localhost
- name: Initialise Vault operator
  shell: vault operator init -key-shares=5 -key-threshold=3 -format json
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  register: vault_init_results
- name: Parse output of vault init
  set_fact:
    vault_init_parsed: "{{ vault_init_results.stdout | from_json }}"
- name: Write unseal keys to files
  copy:
    dest: "{{ unseal_keys_dir_output }}/unseal_key_{{ item.0 }}"
    content: "{{ item.1 }}"
  with_indexed_items: "{{ vault_init_parsed.unseal_keys_hex }}"
  delegate_to: localhost
- name: Write root token to file
  copy:
    content: "{{ vault_init_parsed.root_token }}"
    dest: "{{root_token_dir_output}}/rootkey"
  delegate_to: localhost
  
  
- name: Reading unseal key contents
  command: cat {{item}}
  register: unseal_keys
  with_fileglob: "{{ unseal_keys_dir_output }}/*"
  delegate_to: localhost
  become: no
  
- name: Unseal vault with unseal keys
  shell: |
    vault operator unseal {{ item.stdout }}
  environment:
    VAULT_ADDR: "http://127.0.0.1:8200"
  with_items: "{{unseal_keys.results}}"
  
  


  
